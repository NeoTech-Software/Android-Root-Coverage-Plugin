plugins {
    // Core Gradle plugins
    id "java-gradle-plugin"

    // Third-party plugins
    alias(libs.plugins.kotlinJvm)
    alias(libs.plugins.kotlinDokka)
    alias(libs.plugins.pluginPortalPublish)
    alias(libs.plugins.mavenPublish)
}

// To upload new plugin artifact Gradle Portal:
// > ./gradlew publishPlugins
//
// To upload new plugin artifact to Maven Central Repository:
// > ./gradlew publish --no-daemon --no-parallel
//
// To test the plugin:
// > ./gradlew clean test

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

plugins.withId("com.vanniktech.maven.publish") {
    mavenPublish {
        sonatypeHost = "S01"
    }
}

gradlePlugin {
    plugins {
        rootCoverage {
            id = 'nl.neotech.plugin.rootcoverage'
            implementationClass = 'org.neotech.plugin.rootcoverage.RootCoveragePlugin'
        }
    }
}

pluginBundle {
    setWebsite(POM_URL)
    vcsUrl = POM_SCM_URL
    setDescription(POM_DESCRIPTION)
    tags = ['android', 'coverage', 'jacoco', 'code-coverage', 'coverage-report', 'aggregated-report']

    plugins {
        rootCoverage {
            displayName = 'Android-Root-Coverage-Plugin'
        }
    }

    mavenCoordinates {
        groupId = GROUP
        artifactId = POM_ARTIFACT_ID
        version = VERSION_NAME
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams true
    }
}

dependencies {
    compileOnly gradleApi()
    implementation libs.androidGradlePlugin

    // Without depending on the full Android Gradle Plugin, the test fixture is unable to locate the Android Gradle Plugin.
    // Not sure why this is, but for now this is a quick fx to add it to the TestKit classpath.
    testImplementation libs.androidGradlePlugin
    testImplementation libs.bundles.jvmTest
    testImplementation gradleTestKit()
    testImplementation libs.mockk
}
